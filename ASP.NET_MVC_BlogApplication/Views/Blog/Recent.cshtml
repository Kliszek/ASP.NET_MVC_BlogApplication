@{
    ViewData["Title"] = "Recent blogs";
}
@{
}
@model IEnumerable<Blog>
@* if (ViewBag.loggedUserID == null) return; *@

<section>
        <div class="row justify-content-center">
            <div class="col-md-7 col-lg-9 bg-light">
                
                @if(ViewData["DisplayedBlog"] != null)
                {
                    <h3 class="display-3 lead text-center mt-4">
                        @( ((Blog)ViewData["DisplayedBlog"]!).Title )
                    </h3>
                    <h5 class="h5 py-3 text-center fst-italic border-bottom">
                        A blog by: @( ((Blog)ViewData["DisplayedBlog"]!).OwnerUserName )
                    </h5>
                    @if( !((IEnumerable<BlogEntry>)ViewData["DisplayedBlogEntries"]!).Any() )
                    {
                        <h4 class="h4 text-muted">
                            There are no blog entries in this blog.
                        </h4>
                    } else
                    @foreach(BlogEntry blogEntry in (IEnumerable<BlogEntry>)ViewData["DisplayedBlogEntries"]!)
                    {
                        <div class="card p-2 w-100 mt-3">
                            <div class="card-body position-relative">
                                <h5 class="card-title">
                                    @blogEntry.Title
                                </h5>

                                <h6 class="card-subtitle small mb-2 text-muted">posted on @blogEntry.CreatedDate</h6>
                                <p class="card-text">@blogEntry.Content</p>
                                
                                @if(Context.Session.GetString("CurrentUser") == ((Blog)ViewData["DisplayedBlog"]!).OwnerID)
                                {
                                    <div class="dropdown position-absolute m-1 top-0 end-0">
                                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                            Options
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a asp-controller="BlogEntry" asp-action="Edit" asp-route-id="@blogEntry.BlogEntryID" class="dropdown-item">Edit</a></li>
                                            <li><button data-bs-toggle="modal" data-bs-target="#deleteModal" data-deleteentryid="@blogEntry.BlogEntryID" class="dropdown-item">Delete</button></li>
                                        </ul>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                } else
                {
                    <p>Choose a blog</p>
                }
            </div>
        </div>
</section>

<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Warning!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this blog entry?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" id="deleteButton" class="btn btn-danger">Delete the blog</button>
      </div>
    </div>
  </div>
</div>

<script>
    var blogEntryIdToDelete = "";

    var deleteButtons = document.querySelectorAll("button[data-deleteentryid]");
    deleteButtons.forEach( button => {
        button.addEventListener("click", (e) => {
            blogEntryIdToDelete = button.dataset.deleteentryid;
        });
    });

    document.querySelector("#deleteButton").addEventListener("click", (e) => {
        fetch(`/BlogEntry/Delete/${blogEntryIdToDelete}`, {
                method: "DELETE",
                headers: {"ContentType": "text/plain"},
                credentials: 'include',
            })
            .then((response) => {
                response.text().then( text => {
                    if(text == "success")
                        window.location.reload(true);
                    else
                        alert(`Error: ${text}`);
                });
            });
    })
</script>